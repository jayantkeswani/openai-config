{
  "type": "list",
  "logic": {
    "split": [
      {
        "select": {
          "query": ".productCarouselItemContainer"
        },
        "method": {
          "text": {}
        }
      }
    ],
    "breadcrumb": [
      {
        "select": {
          "query": ".facet-list:not(.js-facet-list) > li, .pageCategoryTitle",
          "mode": "FIRST"
        },
        "method": {
          "text": {
            "own": true
          }
        }
      }
    ],
    "rank": [
      {
        "select": {
          "query": "li.active span",
          "mode": "FIRST"
        },
        "method": {
          "text": {
            "own": true
          }
        },
        "parsers": [
          {
            "spel": {
              "expr": "((T(java.lang.Integer).parseInt(#root) -1 ) * 18) + 1"
            }
          }
        ]
      }
    ]
  },
  "extract": {    
    "name": [
      {
        "select": {
          "query": ".item-name",
          "mode": "FIRST"
        },
        "method": {
          "text": {}
        }
      }
    ],
    "url": [
      {
        "select": {
          "query": ".item > a",
          "mode": "FIRST"
        },
        "method": {
          "attr": {
            "key": "abs:href"
          }
        }
      }
    ],
    "price": [
      {
        "select": {
          "query": ".currentPrice",
          "mode": "FIRST"
        },
        "method": {
          "text": {}
        },
        "parsers": [
          {
            "spel": {
              "expr": "#root.replace(',', '')"
            }
          }
        ]
      }
    ],
    "netQuantity": [
      {
        "select": {
          "query": ".item-name",
          "mode": "FIRST"
        },
        "method": {
          "text": {}
        },
        "parsers": [
          {
            "patternSpel": {
              "regex": "(?i)((?<net>\\d+([,.]\\d+)?) ?(?<unit>(kg|gm|g|cl|ml|ltr|litre|L|l|uds|Pack|pcs|Pieces|oz|Sachets|s|Capsules|ea)) ?x? ?(?<quantity>\\d*) ?(\\+ (?<free>\\d+) Free)?|((?<quantity1>\\d*) ?x ?(?<net1>\\d+([,.]\\d+)?) ?(?<unit1>(kg|gm|g|cl|ml|ltr|litre|L|l|uds|Pack|pcs|Pieces|oz|Sachets|s|Capsules|ea))))",
              "expr": "(#net1 != null && #net1 != '') ? #net1+ #unit1+ ' x ' + #quantity1 : (#quantity != null && #quantity !='') ? ((#free != null && #free != '') ? #net+ #unit+ ' x ' + (T(java.lang.Integer).parseInt(#quantity) + T(java.lang.Integer).parseInt(#free)) : #net+ #unit+ ' x ' + #quantity) : (#net != null && #net != '' && #unit!= null && #unit!='') ? #net + ' ' + #unit: ''"  
            }
          }
        ]
      }
    ],
    "productNo": [
      {
        "select": {
          "query": ".item > a",
          "mode": "FIRST"
        },
        "method": {
          "attr": {
            "key": "data-productcode"
          }
        }
      }
    ],
    "promotionText": [
      {
        "select": {
          "query": ".oldPrice",
          "mode": "FIRST"
        },
        "method": {
          "text": {}
        },
        "parsers": [
          {
            "spel": {
              "expr": "'Was ' + #root.replace(',', '')"
            }
          }
        ]
      },
      {
        "select": {
          "query": ".promotionContainer a>span",
          "mode": "FIRST"
        },
        "method": {
          "text": {
            "own": true
          }
        }
      }
    ],
    "imageURL": [
      {
        "select": {
          "query": ".thumb img",
          "mode": "FIRST"
        },
        "method": {
          "attr": {
            "key": "abs:src"
          }
        }
      }
    ],
    "outOfStock": [
      {
        "select": {
          "query": ".upfrontOutOfStockMsg",
          "mode": "FIRST"
        },
        "method": {
          "text": {}
        }
      }
    ],
    "badge": [
      {
        "select": {
          "query": ".minMaxQuantityMsg",
          "mode": "FIRST"
        },
        "method": {
          "text": {}
        }
      }
    ]
  },
  "feedback": {
    "avgRating": [
      {
        "select": {
          "query": ".addtocart-component .rating[data-rating]",
          "mode": "SPLIT"
        },
        "method": {
          "attr": {
            "key": "data-rating"
          }
        },
        "parsers": [
          {
            "pattern": {
              "regex": "\"rating\":\"(?<rating>(\\d+[.]\\d{1,2})|())",
              "group":"rating"
            }
          }
        ]
      }
    ]
  },
  "extractor": {
    "list": {}
  }
}